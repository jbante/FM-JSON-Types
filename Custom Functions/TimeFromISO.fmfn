/*******************************************************************************
 * TimeFromISO ( iso8601Time )
 * Parses time data formatted according to ISO 8601, and casts it to a
 * FileMaker time. For time with limited precision, the first time in the
 * specified period will be returned.
 *
 * @parameter iso8601Time: text encoding a time in ISO 8601 format
 *
 * @return A time
 *
 * @history 2017-04-16 - Jeremy Bante <http://scr.im/fugue> - Created
 * @history 2017-04-25 - Daniel Smith <dan@filemaker.consulting> - Add
 * exceptions for JSONGetElement error and empty parameter
 * @history 2017-04-27 - Jeremy Bante <http://scr.im/fugue> - Removing exception
 * for JSONGetElement result error. Adjusting response to empty date input to
 * behave similarly for timestamp input.
 * @history 2017-05-11 - Jeremy Bante <http://scr.im/fugue> - Improving error
 * result
 * @history 2017-10-02 - Jeremy Bante <http://scr.im/fugue> - Tolerating space
 * as timestamp delimiter.
 *
 * @see https://en.wikipedia.org/wiki/ISO_8601
 ******************************************************************************/

Let ( [
	_inputIsEmpty = IsEmpty ( iso8601Time ) ;
	_delimiterPosition =
		Max (
			Position ( iso8601Time ; "T" ; 1 ; 1 ) ;
			Position ( iso8601Time ; " " ; 1 ; 1 )
		) ;
	_text =
		If ( _delimiterPosition = 0 ;
			iso8601Time ;
			/* Else */ Replace ( iso8601Time ; 1 ; _delimiterPosition ; "" )
		) ;
	_timezonePosition =
		Max (
			Position ( _text ; "Z" ; 1 ; 1 ) ;
			Position ( _text ; "+" ; 1 ; 1 ) ;
			Position ( _text ; "-" ; 1 ; 1 ) ;
			Position ( _text ; "−" ; 1 ; 1 )
		) ;
	_invalid =
		( IsEmpty ( _text ) and not _inputIsEmpty )
		or (
			_timezonePosition > 0
			and PatternCount ( _text ; Middle ( _text ; _timezonePosition ; 1 ) ) > 1
		) ;
	_text =
		If ( _timezonePosition = 0 ;
			_text ;
			/* Else */ Left ( _text ; _timezonePosition - 1 )
		) ;
	_colonFormat = Position ( _text ; ":" ; 1 ; 1 ) > 0 ;
	_decimal =
		Max ( Position ( _text ; "," ; 1 ; 1 ) ; Position ( _text ; "." ; 1 ; 1 ) ) ;
	_integer =
		If ( _decimal = 0 ;
			_text ;
			/* Else */ Left ( _text ; _decimal - 1 )
		) ;

	_hour = Left ( _integer ; 2 ) ;
	_minute = Middle ( _integer ; If ( _colonFormat ; 4 ; 3 ) ; 2 ) ;
	_second = Middle ( _integer ; If ( _colonFormat ; 7 ; 5 ) ; 2 )
] ;
	Case (
		_inputIsEmpty ;
			"" ;

		_invalid ;
			"? Not a valid ISO 8601 time¶  " & iso8601Time ;

		_decimal ≠ 0 ;
			Let ( [
				_fraction = Replace ( _text ; 1 ; _decimal ; "" ) ;
				_fraction = _fraction * 10 ^ ( 0 - Length ( _fraction ) )
			] ;
				Case (
					IsEmpty ( _minute ) ;
						Time ( _hour + _fraction ; 0 ; 0 ) ;
					IsEmpty ( _second ) ;
						Time ( _hour ; _minute + _fraction ; 0 ) ;
					/* Else */
						Time ( _hour ; _minute ; _second + _fraction )
				)
			) ;

		/* Else */
			Time ( _hour ; _minute ; _second )
	)

)